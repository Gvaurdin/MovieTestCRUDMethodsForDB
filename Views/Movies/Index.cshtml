@using MovieTestCRUDMethodsForDB.ViewModel
@model MoviesViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
@* <form asp-controller="Movies" asp-action="Index" method="get">
    Жанр:
    <select asp-for="MovieGenre" asp-items="Model.Genres">
        <option value="">Все</option>
    </select>
    Фильтр:
    <select asp-for="Selectfilter">
        <option value="">Все</option>
        <option value="Ask">От А до Я</option>
        <option value="Desc">От Я до А</option>
    </select>
    Фильтр цены:
    <select asp-for="SelectPriceFilter">
        <option value="">Все</option>
        <option value="Ask">По возрастанию</option>
        <option value="Desc">По убыванию</option>
    </select>
    Название:
    <input type="text" asp-for="SearchNameString" />
    <input type="submit" value="Поиск" />
</form> *@

<form asp-controller="Movies" asp-action="Index" method="get">
    <p>
        Жанры:
        <select name="selectedMovieGenre"
                asp-for="FilteredViewModel.SelectedMovieGenre"
                value="FilteredViewModel.SelectedMovieGenre"
                asp-items="Model.FilteredViewModel.Genres">
            <option value="">Все</option>
        </select>

        Фильтрация:
        <select name="sortMovieState"
                asp-for="SortViewModel.MovieTitleSort">
            <option value="">Все</option>
            <option value="AskTitle">По алфавиту (от А до Я)</option>
            <option value="AskDesc">По алфавиту (от Я до А)</option>
        </select>

        Название:
        <input name="selectedMovieTitle" value="@Model.FilteredViewModel.SelectedMovieTitle" type="text" />
        <input type="submit" value="Поиск" />
    </p>

</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Movies.First().Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movies.First().ReleaseDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movies.First().Genre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movies.First().Price)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Movies)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReleaseDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Genre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    const string Disabled = "disabled";
    const string Active = "active";
    string isDisabledPreviousPage = string.Empty;
    if (!Model.Movies.HasPreviousPage)
    {
        isDisabledPreviousPage = Disabled;
    }

    string isDisabledNextPage = string.Empty;
    if (!Model.Movies.HasNextPage)
    {
        isDisabledNextPage = Disabled;
    }
}
<nav>
    <ul class="pagination">
        <li class="page-item @isDisabledPreviousPage">
            <a asp-action="Index"
               asp-route-page="@(Model.Movies.PageIndex - 1)" asp-route-sortMovieState="@(Model.SortViewModel. MovieTitleSort)"
               asp-route-selectedMovieGenre="@(Model.FilteredViewModel.SelectedMovieGenre)"
               asp-route-selectedMovieTitle="@(Model.FilteredViewModel.SelectedMovieTitle)"
               class="page-link" tabindex="-1"
               aria-disabled="@Model.Movies.HasPreviousPage">Назад</a>
        </li>
        @for (int indexPage = 1; indexPage <= Model.Movies.TotalPages; indexPage++)
        {
            string isActive = string.Empty;
            @if (indexPage == Model.Movies.PageIndex)
            {
                isActive = Active;
            }

            <li class="page-item @isActive">
                <a asp-action="Index"
                   asp-route-page="@indexPage"
                   asp-route-sortMovieState="@(Model.SortViewModel. MovieTitleSort)"
                   asp-route-selectedMovieGenre="@(Model.FilteredViewModel.SelectedMovieGenre)"
                   asp-route-selectedMovieTitle="@(Model.FilteredViewModel.SelectedMovieTitle)"
                   class="page-link">@indexPage</a>
            </li>

        }

        <li class="page-item @isDisabledNextPage">
            <a asp-action="Index"
               asp-route-page="@(Model.Movies.PageIndex + 1)"
               asp-route-sortMovieState="@(Model. SortViewModel. MovieTitleSort)"
               asp-route-selectedMovieGenre="@(Model.FilteredViewModel.SelectedMovieGenre)"
               asp-route-selectedMovieTitle="@(Model.FilteredViewModel.SelectedMovieTitle)"
               class="page-link"
               aria-disabled="@Model.Movies.HasNextPage">Вперед</a>
        </li>
    </ul>
</nav>

@* @if (Model.Movies.HasPreviousPage)
{
    <a asp-action="Index"
       asp-route-page="@(Model.Movies.PageIndex - 1)" asp-route-sortMovieState="@(Model.SortViewModel. MovieTitleSort)"
       asp-route-selectedMovieGenre="@(Model.FilteredViewModel.SelectedMovieGenre)"
       asp-route-selectedMovieTitle="@(Model.FilteredViewModel.SelectedMovieTitle)" class="btn btn-outline-dark">
        <i class="glyphicon glyphicon-chevron-left"></i>
        Назад
    </a>
}


@if (Model.Movies.HasNextPage)
{
    <a asp-action="Index"
       asp-route-page="@(Model.Movies.PageIndex + 1)"
       asp-route-sortMovieState="@(Model. SortViewModel. MovieTitleSort)"
       asp-route-selectedMovieGenre="@(Model.FilteredViewModel.SelectedMovieGenre)"
       asp-route-selectedMovieTitle="@(Model.FilteredViewModel.SelectedMovieTitle)"
       class="btn btn-outline-dark">
        Вперед
        <i class="glyphicon glyphicon-chevron-right"></i>
    </a>
} *@